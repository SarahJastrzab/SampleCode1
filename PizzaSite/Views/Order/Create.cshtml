@model PizzaSite.Models.Order


@{
    ViewBag.Title = "Create";
}

<h2>Tell Us about Yourself!</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { onsubmit = "validateForm()" })){
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-horizontal">
            <div class="form-group">

                <label class="control-label col-md-2">
                    Your First Name
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientFirstName, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.ClientFirstName, "", new { @name="ClientFirstName", @class = "text-danger" })
                </div>
                <label class="control-label col-md-2">
                    Your Last Name
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientLastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">
                    Phone Number
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ClientPhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ClientPhone, "", new { @class = "text-danger" })
                </div>

                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2">
                    Street Number
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.StreetNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetNumber, "", new { @class = "text-danger" })
                </div>
                <label class="control-label col-md-2">
                    Street Name
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.StreetName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Building, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Building, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Building, "", new { @class = "text-danger" })
                </div>
                <label class="control-label col-md-2">
                    Apt. Number
                </label>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.AptNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AptNumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="form-group">
            <label class="control-label col-md-2">
                Delivery or Pickup?
            </label>

            <div class="col-md-4">
                @Html.DropDownList("DeliveryID", String.Empty)
                @Html.ValidationMessageFor(model => model.Delivery.DeliveryID)

            </div>
        </div>




        <!--
        <div class="form-group">
            @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinalTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinalTotal, "", new { @class = "text-danger" })
            </div>
        </div>-->

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create >>" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
   
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/ValidatorScript.js")
}
